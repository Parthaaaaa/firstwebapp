{"version":3,"sources":["components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/FaceRecognition/FaceRecognition.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Signin","id","htmlFor","type","name","class","value","href","Register","FaceRecognition","imageUrl","box","alt","src","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onButtonSubmit","onChange","Rank","entries","app","Clarifai","App","apiKey","particlesOptions","polygon","number","density","enable","value_area","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","_this$state","particles_default","params","components_Navigation_Navigation","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_Signin_Signin","components_Register_Register","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","concat","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.96f8284f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signout')} className='f3 link dim black pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signin')} className='f3 link dim black  pa3 pointer'>Sign In</p>\r\n          <p onClick={() => onRouteChange('register')} className='f3 link dim black  pa3 pointer'>Register</p>\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n\r\n","import React from 'react';\r\n/*import './Signin.css'*/\r\nconst Signin = ({onRouteChange}) => {\r\n\treturn (\r\n\t<article className=\"br4 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"/>\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n              <label class=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\"/> Remember me</label>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input  \r\n                onClick={() => onRouteChange('home')}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n            <a onClick={() => onRouteChange('Register')} class=\"f10 link dim black db pointer\">Register</a>\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n            <p href=\"#0\" class=\"f6 link dim black db\">Forgot your password?</p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n\t);\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n/*import './Signin.css'*/\r\nconst Register = ({onRouteChange}) => {\r\n\treturn (\r\n\t<article className=\"br4 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n               <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"/>\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"/>\r\n              </div>  \r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input  \r\n                onClick={() => onRouteChange('home')}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n\t);\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './FaceRecognition.css'\r\nconst FaceRecognition = ({imageUrl,box}) => {\r\n\treturn (\r\n        <div className='center ma'>\r\n        <div className='absolute mt2'>\r\n        \t<img id='inputimage'alt='' src={imageUrl} width='500px' height='auto'/>\r\n        \t<div className = 'bounding-box' style={{top: box.topRow, right: box.rightCol,bottom: box.bottomRow,left: box.leftCol}}></div>\r\n        </div>\r\n        </div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className='f3'>\r\n        {'This Magic Brain will detect faces in your pictures.Lets try.'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='form center pa4 br3 shadow-5'>\r\n          <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n          <button\r\n            className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n            onClick={onButtonSubmit}\r\n          >Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className='white f3'>\r\n\r\n        {/*{`${name}, your current entry count is...`}*/}\r\n\r\n      </div>\r\n      <div className='white f1'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n\n\n\nconst app = new Clarifai.App({\n  apiKey:'9608eb25e72a49ed86f4cc940e77eed2'\n  });\nconst particlesOptions = {\n                    polygon:{\n                      number:{\n                        value:30,\n                        density:{\n\n                          enable:true,\n                          value_area:2000,\n\n                        }\n                      } \n                    }\n                }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input:'',\n      imageUrl:'',\n      box:{},\n      route: 'signin',\n      isSignedIn:false,\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n   const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n   const image = document.getElementById('inputimage');\n   const width = Number(image.width);\n   const height = Number(image.height);\n   return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol:width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height),\n   }\n\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n  onButtonSubmit = () => {\n    this.setState({imageUrl:this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err));\n  }\n   onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n   }\n\n  render() {\n    const {isSignedIn,imageUrl,route,box} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className ='particles' params={particlesOptions}/>\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route==='home'\n         ?<div>\n         <Rank/>\n        <ImageLinkForm \n        onInputChange={this.onInputChange}\n        onButtonSubmit={this.onButtonSubmit}\n        />\n        <Rank/>\n        <FaceRecognition box={box} imageUrl= {imageUrl }/>\n        </div>\n        :(\n          route==='signin'\n          ?<Signin onRouteChange={this.onRouteChange}/>\n          : <Register onRouteChange={this.onRouteChange}/>\n        )       \n        }\n       {/*<Logo>*/}\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}